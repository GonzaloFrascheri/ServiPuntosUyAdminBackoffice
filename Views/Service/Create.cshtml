@model ServiPuntosUyAdmin.Models.ServiceCreateViewModel
@{
  Layout = "_Layout";
}

<h2>Nuevo servicio</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success" id="successMsg">@TempData["Success"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('successMsg');
            if(el) el.style.display = 'none';
        }, 3000);
    </script>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" id="errorMsg">@TempData["Error"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('errorMsg');
            if(el) el.style.display = 'none';
        }, 4000); // el error lo dejamos 4 segundos por ejemplo
    </script>
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.BranchId)

    <div class="form-group">
        <label>Nombre</label>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label>Descripci√≥n</label>
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 3 })
    </div>
    <div class="form-group">
        <label>Precio</label>
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", step = "0.01", required = "required" })
        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
    </div>
    <div class="form-group form-check">
        @Html.CheckBoxFor(m => m.AgeRestricted, new { @class = "form-check-input" })
        <label class="form-check-label">Restringido por edad</label>
    </div>
    <div class="form-group">
        <label>Horario Inicio</label>
        @Html.TextBoxFor(m => m.StartTime, new { @class = "form-control", type = "time", required = "required" })
        @Html.ValidationMessageFor(m => m.StartTime, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label>Horario Fin</label>
        @Html.TextBoxFor(m => m.EndTime, new { @class = "form-control", type = "time", required = "required" })
        @Html.ValidationMessageFor(m => m.EndTime, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
}

@section Scripts {
  <script>
    setTimeout(()=>{
      const e = document.getElementById('flashError');
      const s = document.getElementById('flashSuccess');
      if(e) e.remove();
      if(s) s.remove();
    }, 3000);
  </script>
}