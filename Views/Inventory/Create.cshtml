@model ServiPuntosUyAdmin.Models.InventoryStockViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = $"Nuevo stock: {Model.ProductName}";
}

<h2>@ViewData["Title"]</h2>
@if (TempData["Success"] != null)
{
    <div class="alert alert-success" id="successMsg">@TempData["Success"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('successMsg');
            if(el) el.style.display = 'none';
        }, 3000);
    </script>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" id="errorMsg">@TempData["Error"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('errorMsg');
            if(el) el.style.display = 'none';
        }, 4000); // el error lo dejamos 4 segundos por ejemplo
    </script>
}
<form asp-action="Create" asp-controller="Inventory" method="post">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ProductId)
    @Html.HiddenFor(m => m.ProductName)

    <div class="form-group">
        <label>Producto</label>
        <input class="form-control" value="@Model.ProductName" disabled />
    </div>
    <div class="form-group">
        <label>Cantidad</label>
        @Html.TextBoxFor(m => m.Quantity, new { @class="form-control", type="number", min="0", required="required" })
        @Html.ValidationMessageFor(m => m.Quantity, "", new { @class="text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <a asp-action="Index" asp-controller="Inventory" class="btn btn-secondary">Cancelar</a>
</form>
