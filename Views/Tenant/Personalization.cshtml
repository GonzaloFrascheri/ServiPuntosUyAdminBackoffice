@model ServiPuntosUyAdmin.Models.TenantUIConfig
@{
    var tenantId = ViewBag.TenantId as int? ?? 0;
}

<h2>Personalizaci√≥n de Cadena</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success" id="successMsg">@TempData["Success"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('successMsg');
            if(el) el.style.display = 'none';
        }, 3000);
    </script>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" id="errorMsg">@TempData["Error"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('errorMsg');
            if(el) el.style.display = 'none';
        }, 4000); // el error lo dejamos 4 segundos por ejemplo
    </script>
}

<form asp-action="Personalization" asp-route-id="@tenantId" method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label>Logo (URL)</label>
        <input asp-for="LogoUrl" class="form-control" />
        @Html.ValidationMessageFor(m => m.LogoUrl, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label>Color Primario</label>
        <input asp-for="PrimaryColor" type="color" class="form-control form-control-color" />
        @Html.ValidationMessageFor(m => m.PrimaryColor, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <label>Color Secundario</label>
        <input asp-for="SecondaryColor" type="color" class="form-control form-control-color" />
        @Html.ValidationMessageFor(m => m.SecondaryColor, "", new { @class = "text-danger" })
    </div>
    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Cancelar</a>
</form>
