@model ServiPuntosUyAdmin.Models.FuelPriceViewModel
@using System.Globalization
@{
    Layout = "_Layout";
}

<h2>Editar precio</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success" id="successMsg">@TempData["Success"]</div>
    <script>
        setTimeout(() => document.getElementById('successMsg')?.remove(), 3000);
    </script>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" id="errorMsg">@TempData["Error"]</div>
    <script>
        setTimeout(() => document.getElementById('errorMsg')?.remove(), 4000);
    </script>
}

@using (Html.BeginForm(
           actionName: "Edit",
           controllerName: "Fuel",
           routeValues: new { id = Model.FuelType },
           method: FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.FuelType)

    <div class="form-group">
      <label>Precio</label>
      @Html.TextBoxFor(m => m.Price, new {
          @class = "form-control",
          type      = "text",
          value     = Model.Price.ToString("N2", CultureInfo.CurrentCulture),
          required  = "required"
      })
      <small class="form-text text-muted">
        Usa punto o coma para decimales, ej. 50.00 o 50,00
      </small>
      @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <a asp-action="Index" asp-controller="Fuel" class="btn btn-secondary">Cancelar</a>
}
