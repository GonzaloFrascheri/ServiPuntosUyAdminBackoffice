@model IEnumerable<ServiPuntosUyAdmin.Models.FuelPriceViewModel>
@{
  Layout = "_Layout";

  // Mapa de código → nombre
    var fuelNames = new Dictionary<int, string> {
        { 0, "Super" },
        { 1, "Gasoil" },
        { 2, "Premium" }
    };
}

<h2>Combustibles</h2>
@if (TempData["Success"] != null)
{
    <div class="alert alert-success" id="successMsg">@TempData["Success"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('successMsg');
            if(el) el.style.display = 'none';
        }, 3000);
    </script>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger" id="errorMsg">@TempData["Error"]</div>
    <script>
        setTimeout(() => {
            const el = document.getElementById('errorMsg');
            if(el) el.style.display = 'none';
        }, 4000); // el error lo dejamos 4 segundos por ejemplo
    </script>
}

<table class="table mt-3">
  <thead>
    <tr>
      <th>Tipo</th>
      <th>Nombre</th>
      <th>Precio</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
  @foreach (var f in Model)
    {
        <tr>
            <td>@f.FuelType</td>
            <td>@(fuelNames.ContainsKey(f.FuelType) ? fuelNames[f.FuelType] : "Desconocido")</td>
            <td>@f.Price.ToString("C")</td>
            <td>
                <a asp-action="Edit"
                   asp-controller="Fuel"
                   asp-route-id="@f.FuelType"
                   class="btn btn-sm btn-primary">
                    Editar
                </a>
            </td>
        </tr>
    }
    </tbody>
</table>
